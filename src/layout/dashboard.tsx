import React, { useState } from 'react';
import {
    MenuFoldOutlined,
    MenuUnfoldOutlined,
    TableOutlined,
    ProductOutlined,
} from '@ant-design/icons';



import { Button, Layout, Menu, theme } from 'antd';
import { useRouter } from 'next/router';
import Head from 'next/head';
import { DashboardLayoutProps, Item, MenuItem } from '@/utils/interface';
const { Header, Content, Sider } = Layout;

const items: MenuItem[] = [
    {
        key: 0,
        icon: <TableOutlined />,
        label: 'Tabla Dinamica',
        path: '/tablaDinamica',
    },
    {
        key: 1,
        icon: <ProductOutlined />,
        label: 'Productos',
        path: '/productos',

    },
]

const siderStyle: React.CSSProperties = {
    overflow: 'auto',
    height: '100vh',
    position: 'sticky',
    insetInlineStart: 0,
    top: 0,
    bottom: 0,
    scrollbarWidth: 'thin',
    scrollbarGutter: 'stable',
  };


export const Principal = ({ children, title }: DashboardLayoutProps) => {
    const router = useRouter();
    const [collapsed, setCollapsed] = useState(false);
    const [titleScreen, setTitleScreen] = useState(0);
    const [selectedKeys, setSelectedKeys] = useState("");

    const getValues = (item: Item) => {
        const path = items.filter(element => element.key == item?.key);

        
        const selectedKey = path[0]?.key !== undefined ? `${path[0]?.key}` : "";
        setSelectedKeys(selectedKey);
        router.push(path[0].path)
    };

    const {
        token: { colorBgContainer, borderRadiusLG },
    } = theme.useToken();
    return (
        <>
            <Head>
                <title>{title}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Layout style={siderStyle}>
                <Sider  style={siderStyle} trigger={null} collapsible collapsed={collapsed}>
                    <div className="demo-logo-vertical" />
                    <Menu
                        theme="dark"
                        mode="inline"
                        selectedKeys={[`${selectedKeys}`]}
                        defaultSelectedKeys={['0']}
                        onClick={(e) => { setTitleScreen(parseInt(e.key)); getValues(e) }}
                        items={items}
                    />
                </Sider>
                <Layout style={{
        height:'100vh ',
      }}>
                    <Header style={{ padding: 0, background: colorBgContainer }}>
                        <Button
                            type="text"
                            icon={collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}
                            onClick={() => setCollapsed(!collapsed)}
                            style={{
                                fontSize: '16px',
                                width: 64,
                                height: 64,
                            }}
                        />
                        {items[titleScreen] && items[titleScreen]?.label}

                    </Header>
                    <Content
                        style={{
                            margin: '24px 16px',
                            padding: 24,
                            minHeight: 280,
                            overflow: 'hidden',
                            overflowY: 'auto',
                            background: colorBgContainer,
                            borderRadius: borderRadiusLG,
                        }}
                    >
                        {children}
                    </Content>
                </Layout>
            </Layout>
        </>
    );
}
